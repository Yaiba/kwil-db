// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: column.sql

package repository

import (
	"context"
)

const createAttribute = `-- name: CreateAttribute :exec
INSERT INTO
    attributes (column_id, attribute_type, attribute_value)
VALUES
    (
        (
            SELECT
                id
            FROM
                COLUMNS
            WHERE
                column_name = $1
        ),
        $2,
        $3
    )
`

type CreateAttributeParams struct {
	ColumnName     string
	AttributeType  int32
	AttributeValue []byte
}

func (q *Queries) CreateAttribute(ctx context.Context, arg *CreateAttributeParams) error {
	_, err := q.exec(ctx, q.createAttributeStmt, createAttribute, arg.ColumnName, arg.AttributeType, arg.AttributeValue)
	return err
}

const createColumn = `-- name: CreateColumn :exec
INSERT INTO
    COLUMNS (table_id, column_name, column_type)
VALUES
    (
        (
            SELECT
                id
            FROM
                tables
            WHERE
                table_name = $1
        ),
        $2,
        $3
    )
`

type CreateColumnParams struct {
	TableName  string
	ColumnName string
	ColumnType int32
}

func (q *Queries) CreateColumn(ctx context.Context, arg *CreateColumnParams) error {
	_, err := q.exec(ctx, q.createColumnStmt, createColumn, arg.TableName, arg.ColumnName, arg.ColumnType)
	return err
}
