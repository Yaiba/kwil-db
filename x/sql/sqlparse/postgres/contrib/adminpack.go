// Code generated by sqlc-pg-gen. DO NOT EDIT.

package contrib

import (
	"kwil/x/sql/catalog"
)

func AdminpackFuncs0() []*catalog.Function {
	return []*catalog.Function{
		{
			Name: "pg_file_rename",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "pg_file_rename",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "pg_file_sync",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "void"},
		},
		{
			Name: "pg_file_unlink",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "pg_file_write",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "boolean"},
				},
			},
			ReturnType: &catalog.QualName{Name: "bigint"},
		},
		{
			Name:       "pg_logdir_ls",
			Args:       []*catalog.Argument{},
			ReturnType: &catalog.QualName{Name: "record"},
		},
	}
}

func AdminpackFuncs() []*catalog.Function {
	funcs := []*catalog.Function{}
	funcs = append(funcs, AdminpackFuncs0()...)
	return funcs
}

func Adminpack() *catalog.Schema {
	s := &catalog.Schema{Name: "pg_catalog"}
	s.Funcs = AdminpackFuncs()
	return s
}
