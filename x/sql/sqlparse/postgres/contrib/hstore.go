// Code generated by sqlc-pg-gen. DO NOT EDIT.

package contrib

import (
	"kwil/x/sql/catalog"
)

func HstoreFuncs0() []*catalog.Function {
	return []*catalog.Function{
		{
			Name: "akeys",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text[]"},
		},
		{
			Name: "avals",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text[]"},
		},
		{
			Name: "defined",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "delete",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "delete",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "delete",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "each",
			Args: []*catalog.Argument{
				{
					Name: "hs",
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "exist",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "exists_all",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "exists_any",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "fetchval",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text"},
		},
		{
			Name: "ghstore_in",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "cstring"},
				},
			},
			ReturnType: &catalog.QualName{Name: "ghstore"},
		},
		{
			Name: "ghstore_out",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "ghstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "cstring"},
		},
		{
			Name: "hs_concat",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hs_contained",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hs_contains",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "record"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hstore",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hstore",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hstore",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hstore_cmp",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "integer"},
		},
		{
			Name: "hstore_eq",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_ge",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_gt",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_hash",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "integer"},
		},
		{
			Name: "hstore_hash_extended",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "bigint"},
				},
			},
			ReturnType: &catalog.QualName{Name: "bigint"},
		},
		{
			Name: "hstore_in",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "cstring"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "hstore_le",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_lt",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_ne",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "hstore_out",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "cstring"},
		},
		{
			Name: "hstore_send",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "bytea"},
		},
		{
			Name: "hstore_to_array",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text[]"},
		},
		{
			Name: "hstore_to_json",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "json"},
		},
		{
			Name: "hstore_to_json_loose",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "json"},
		},
		{
			Name: "hstore_to_jsonb",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "jsonb"},
		},
		{
			Name: "hstore_to_jsonb_loose",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "jsonb"},
		},
		{
			Name: "hstore_to_matrix",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text[]"},
		},
		{
			Name: "hstore_version_diag",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "integer"},
		},
		{
			Name: "isdefined",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "isexists",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "populate_record",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "anyelement"},
				},
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "anyelement"},
		},
		{
			Name: "skeys",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text"},
		},
		{
			Name: "slice",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
		{
			Name: "slice_array",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
				{
					Type: &catalog.QualName{Name: "text[]"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text[]"},
		},
		{
			Name: "svals",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "hstore"},
				},
			},
			ReturnType: &catalog.QualName{Name: "text"},
		},
		{
			Name: "tconvert",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "hstore"},
		},
	}
}

func HstoreFuncs() []*catalog.Function {
	funcs := []*catalog.Function{}
	funcs = append(funcs, HstoreFuncs0()...)
	return funcs
}

func Hstore() *catalog.Schema {
	s := &catalog.Schema{Name: "pg_catalog"}
	s.Funcs = HstoreFuncs()
	return s
}
