// Code generated by sqlc-pg-gen. DO NOT EDIT.

package contrib

import (
	"kwil/x/sql/catalog"
)

func TablefuncFuncs0() []*catalog.Function {
	return []*catalog.Function{
		{
			Name: "connectby",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "integer"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "connectby",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "integer"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "connectby",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "integer"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "connectby",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "integer"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "crosstab",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "crosstab",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "integer"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "crosstab",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "record"},
		},
		{
			Name: "crosstab2",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "tablefunc_crosstab_2"},
		},
		{
			Name: "crosstab3",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "tablefunc_crosstab_3"},
		},
		{
			Name: "crosstab4",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "text"},
				},
			},
			ReturnType: &catalog.QualName{Name: "tablefunc_crosstab_4"},
		},
		{
			Name: "normal_rand",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "integer"},
				},
				{
					Type: &catalog.QualName{Name: "double precision"},
				},
				{
					Type: &catalog.QualName{Name: "double precision"},
				},
			},
			ReturnType: &catalog.QualName{Name: "double precision"},
		},
	}
}

func TablefuncFuncs() []*catalog.Function {
	funcs := []*catalog.Function{}
	funcs = append(funcs, TablefuncFuncs0()...)
	return funcs
}

func Tablefunc() *catalog.Schema {
	s := &catalog.Schema{Name: "pg_catalog"}
	s.Funcs = TablefuncFuncs()
	return s
}
