// Code generated by sqlc-pg-gen. DO NOT EDIT.

package contrib

import (
	"kwil/x/sql/catalog"
)

func SegFuncs0() []*catalog.Function {
	return []*catalog.Function{
		{
			Name: "seg_center",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "real"},
		},
		{
			Name: "seg_cmp",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "integer"},
		},
		{
			Name: "seg_contained",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_contains",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_different",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_ge",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_gt",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_in",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "cstring"},
				},
			},
			ReturnType: &catalog.QualName{Name: "seg"},
		},
		{
			Name: "seg_inter",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "seg"},
		},
		{
			Name: "seg_le",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_left",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_lower",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "real"},
		},
		{
			Name: "seg_lt",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_out",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "cstring"},
		},
		{
			Name: "seg_over_left",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_over_right",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_overlap",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_right",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_same",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "boolean"},
		},
		{
			Name: "seg_size",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "real"},
		},
		{
			Name: "seg_union",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "seg"},
		},
		{
			Name: "seg_upper",
			Args: []*catalog.Argument{
				{
					Type: &catalog.QualName{Name: "seg"},
				},
			},
			ReturnType: &catalog.QualName{Name: "real"},
		},
	}
}

func SegFuncs() []*catalog.Function {
	funcs := []*catalog.Function{}
	funcs = append(funcs, SegFuncs0()...)
	return funcs
}

func Seg() *catalog.Schema {
	s := &catalog.Schema{Name: "pg_catalog"}
	s.Funcs = SegFuncs()
	return s
}
