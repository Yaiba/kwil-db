{
  "swagger": "2.0",
  "info": {
    "title": "kwil/apisvc/crud.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "KwilService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v0/connect": {
      "get": {
        "operationId": "KwilService_Connect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcConnectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/read": {
      "post": {
        "operationId": "KwilService_Read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcReadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcReadRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/wallets/estimate": {
      "post": {
        "operationId": "KwilService_EstimateCost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcEstimateCostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcEstimateCostRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/wallets/withdraw": {
      "post": {
        "operationId": "KwilService_ReturnFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcReturnFundsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcReturnFundsRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/wallets/{wallet}/balance": {
      "get": {
        "summary": "Wallets",
        "operationId": "KwilService_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcGetBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/write": {
      "post": {
        "operationId": "KwilService_Cud",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcCUDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcCUDRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/{wallet}/{database}/metadata": {
      "get": {
        "operationId": "KwilService_GetMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcGetMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "database",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    }
  },
  "definitions": {
    "apisvcApplySchemaResponse": {
      "type": "object"
    },
    "apisvcCRUDInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "apisvcCUDRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcCRUDInput"
          }
        },
        "nonce": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "fee": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "apisvcCUDResponse": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string"
        }
      }
    },
    "apisvcChange": {
      "type": "object",
      "properties": {
        "cmd": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "reverse": {
          "type": "string"
        }
      }
    },
    "apisvcColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "nullable": {
          "type": "boolean"
        }
      }
    },
    "apisvcConnectResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "apisvcEstimateCostRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcCRUDInput"
          }
        }
      }
    },
    "apisvcEstimateCostResponse": {
      "type": "object",
      "properties": {
        "fee": {
          "type": "string"
        }
      }
    },
    "apisvcGetBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string"
        },
        "spent": {
          "type": "string"
        }
      }
    },
    "apisvcGetMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/apisvcMetadata"
        }
      }
    },
    "apisvcInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apisvcMetadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcTable"
          }
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcQuery"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcRole"
          }
        },
        "defaultRole": {
          "type": "string"
        }
      }
    },
    "apisvcOutput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "apisvcPlan": {
      "type": "object",
      "properties": {
        "planId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcChange"
          }
        }
      }
    },
    "apisvcPlanSchemaResponse": {
      "type": "object",
      "properties": {
        "plan": {
          "$ref": "#/definitions/apisvcPlan"
        }
      }
    },
    "apisvcQuery": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "statement": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcInput"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcOutput"
          }
        }
      }
    },
    "apisvcReadRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcCRUDInput"
          }
        }
      }
    },
    "apisvcReadResponse": {
      "type": "object"
    },
    "apisvcReturnFundsRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "apisvcReturnFundsResponse": {
      "type": "object",
      "properties": {
        "tx": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "fee": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apisvcRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "queries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apisvcTable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcColumn"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
