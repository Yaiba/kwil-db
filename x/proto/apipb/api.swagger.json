{
  "swagger": "2.0",
  "info": {
    "title": "kwil/apisvc/crud.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "KwilService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v0/connect": {
      "get": {
        "operationId": "KwilService_Connect",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcConnectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/drop-schema": {
      "post": {
        "operationId": "KwilService_DropSchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcDropSchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcDropSchemaRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/pricing/estimate": {
      "post": {
        "operationId": "KwilService_EstimateCost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pricingEstimateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pricingEstimateRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/read": {
      "post": {
        "operationId": "KwilService_Read",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcReadResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcReadRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/schema": {
      "post": {
        "operationId": "KwilService_DeploySchema",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcDeploySchemaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcDeploySchemaRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/wallets/withdraw": {
      "post": {
        "operationId": "KwilService_ReturnFunds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcWithdrawalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcWithdrawalRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/wallets/{wallet}/balance": {
      "get": {
        "summary": "Wallets",
        "operationId": "KwilService_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcGetBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "wallet",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/write": {
      "post": {
        "operationId": "KwilService_Write",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcWriteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apisvcWriteRequest"
            }
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    },
    "/api/v0/{owner}/{database}/metadata": {
      "get": {
        "operationId": "KwilService_GetMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apisvcGetMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "database",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "KwilService"
        ]
      }
    }
  },
  "definitions": {
    "apisvcArg": {
      "type": "object",
      "properties": {
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "static": {
          "type": "boolean"
        },
        "inputPosition": {
          "type": "integer",
          "format": "int32"
        },
        "defaultValue": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/apisvcDataType"
        },
        "modifier": {
          "$ref": "#/definitions/apisvcModifierType"
        }
      }
    },
    "apisvcAttribute": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/apisvcAttributeType"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "apisvcAttributeType": {
      "type": "string",
      "enum": [
        "INVALID_ATTRIBUTE",
        "PRIMARY_KEY",
        "UNIQUE",
        "NOT_NULL",
        "DEFAULT",
        "MIN",
        "MAX",
        "MIN_LENGTH",
        "MAX_LENGTH"
      ],
      "default": "INVALID_ATTRIBUTE"
    },
    "apisvcCRUDInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "apisvcColumn": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/apisvcDataType"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcAttribute"
          }
        }
      }
    },
    "apisvcColumnResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "apisvcConnectResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "apisvcDataType": {
      "type": "string",
      "enum": [
        "INVALID_TYPE",
        "STRING",
        "INT32",
        "INT64",
        "BOOLEAN"
      ],
      "default": "INVALID_TYPE"
    },
    "apisvcDatabase": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "defaultRole": {
          "type": "string"
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcTable"
          }
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcQuery"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcRole"
          }
        },
        "indexes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcIndex"
          }
        }
      }
    },
    "apisvcDeploySchemaRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/apisvcTx"
        }
      }
    },
    "apisvcDeploySchemaResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "apisvcDropSchemaRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/apisvcTx"
        }
      }
    },
    "apisvcDropSchemaResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "apisvcGetBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string"
        },
        "spent": {
          "type": "string"
        }
      }
    },
    "apisvcGetMetadataResponse": {
      "type": "object",
      "properties": {
        "database": {
          "$ref": "#/definitions/apisvcDatabase"
        }
      }
    },
    "apisvcIndex": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "using": {
          "$ref": "#/definitions/apisvcIndexType"
        }
      }
    },
    "apisvcIndexType": {
      "type": "string",
      "enum": [
        "INVALID_INDEX",
        "BTREE"
      ],
      "default": "INVALID_INDEX"
    },
    "apisvcModifierType": {
      "type": "string",
      "enum": [
        "INVALID_MODIFIER",
        "NO_MODIFIER",
        "CALLER"
      ],
      "default": "INVALID_MODIFIER"
    },
    "apisvcQuery": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "statement": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/apisvcQueryType"
        },
        "args": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcArg"
          }
        }
      }
    },
    "apisvcQueryResult": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcRow"
          }
        }
      }
    },
    "apisvcQueryType": {
      "type": "string",
      "enum": [
        "QUERY_INVALID",
        "QUERY_SELECT",
        "QUERY_INSERT",
        "QUERY_UPDATE",
        "QUERY_DELETE"
      ],
      "default": "QUERY_INVALID"
    },
    "apisvcReadRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "where": {
          "$ref": "#/definitions/apisvcCRUDInput"
        }
      }
    },
    "apisvcReadResponse": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/apisvcQueryResult"
        }
      }
    },
    "apisvcRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "apisvcRow": {
      "type": "object",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcColumnResult"
          }
        }
      }
    },
    "apisvcTable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apisvcColumn"
          }
        }
      }
    },
    "apisvcTx": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        },
        "fee": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        }
      },
      "description": "TxMsg is a message that can contain any arbitrary data and have\nassociated fees and provenance."
    },
    "apisvcWithdrawalRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/apisvcTx"
        }
      }
    },
    "apisvcWithdrawalResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        },
        "fee": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apisvcWriteRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/apisvcTx"
        }
      }
    },
    "apisvcWriteResponse": {
      "type": "object",
      "properties": {
        "txid": {
          "type": "string"
        },
        "traceId": {
          "type": "string"
        }
      }
    },
    "pricingCRUDInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "pricingEstimateDeleteRequest": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "pricingEstimateDeployRequest": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        }
      }
    },
    "pricingEstimateQueryRequest": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "crud": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pricingCRUDInput"
          }
        }
      }
    },
    "pricingEstimateRequest": {
      "type": "object",
      "properties": {
        "caller": {
          "type": "string"
        },
        "deploy": {
          "$ref": "#/definitions/pricingEstimateDeployRequest"
        },
        "delete": {
          "$ref": "#/definitions/pricingEstimateDeleteRequest"
        },
        "query": {
          "$ref": "#/definitions/pricingEstimateQueryRequest"
        }
      }
    },
    "pricingEstimateResponse": {
      "type": "object",
      "properties": {
        "price": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
