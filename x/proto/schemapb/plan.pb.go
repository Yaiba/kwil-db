// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: kwil/schema/plan.proto

package schemapb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IfExists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IfExists) Reset() {
	*x = IfExists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfExists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfExists) ProtoMessage() {}

func (x *IfExists) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfExists.ProtoReflect.Descriptor instead.
func (*IfExists) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{0}
}

type IfNotExists struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IfNotExists) Reset() {
	*x = IfNotExists{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfNotExists) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfNotExists) ProtoMessage() {}

func (x *IfNotExists) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfNotExists.ProtoReflect.Descriptor instead.
func (*IfNotExists) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{1}
}

type Clause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Clause_IfExists
	//	*Clause_IfNotExists
	Value isClause_Value `protobuf_oneof:"value"`
}

func (x *Clause) Reset() {
	*x = Clause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clause) ProtoMessage() {}

func (x *Clause) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clause.ProtoReflect.Descriptor instead.
func (*Clause) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{2}
}

func (m *Clause) GetValue() isClause_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Clause) GetIfExists() *IfExists {
	if x, ok := x.GetValue().(*Clause_IfExists); ok {
		return x.IfExists
	}
	return nil
}

func (x *Clause) GetIfNotExists() *IfNotExists {
	if x, ok := x.GetValue().(*Clause_IfNotExists); ok {
		return x.IfNotExists
	}
	return nil
}

type isClause_Value interface {
	isClause_Value()
}

type Clause_IfExists struct {
	IfExists *IfExists `protobuf:"bytes,1,opt,name=if_exists,json=ifExists,proto3,oneof"`
}

type Clause_IfNotExists struct {
	IfNotExists *IfNotExists `protobuf:"bytes,2,opt,name=if_not_exists,json=ifNotExists,proto3,oneof"`
}

func (*Clause_IfExists) isClause_Value() {}

func (*Clause_IfNotExists) isClause_Value() {}

type Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*Change_AddSchema
	//	*Change_DropSchema
	//	*Change_ModifySchema
	//	*Change_AddTable
	//	*Change_DropTable
	//	*Change_ModifyTable
	//	*Change_RenameTable
	//	*Change_AddColumn
	//	*Change_DropColumn
	//	*Change_ModifyColumn
	//	*Change_RenameColumn
	//	*Change_AddIndex
	//	*Change_DropIndex
	//	*Change_ModifyIndex
	//	*Change_RenameIndex
	//	*Change_AddForeignKey
	//	*Change_DropForeignKey
	//	*Change_ModifyForeignKey
	//	*Change_AddCheck
	//	*Change_DropCheck
	//	*Change_ModifyCheck
	//	*Change_AddAttr
	//	*Change_DropAttr
	//	*Change_ModifyAttr
	Value isChange_Value `protobuf_oneof:"value"`
}

func (x *Change) Reset() {
	*x = Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Change) ProtoMessage() {}

func (x *Change) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Change.ProtoReflect.Descriptor instead.
func (*Change) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{3}
}

func (m *Change) GetValue() isChange_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Change) GetAddSchema() *AddSchema {
	if x, ok := x.GetValue().(*Change_AddSchema); ok {
		return x.AddSchema
	}
	return nil
}

func (x *Change) GetDropSchema() *DropSchema {
	if x, ok := x.GetValue().(*Change_DropSchema); ok {
		return x.DropSchema
	}
	return nil
}

func (x *Change) GetModifySchema() *ModifySchema {
	if x, ok := x.GetValue().(*Change_ModifySchema); ok {
		return x.ModifySchema
	}
	return nil
}

func (x *Change) GetAddTable() *AddTable {
	if x, ok := x.GetValue().(*Change_AddTable); ok {
		return x.AddTable
	}
	return nil
}

func (x *Change) GetDropTable() *DropTable {
	if x, ok := x.GetValue().(*Change_DropTable); ok {
		return x.DropTable
	}
	return nil
}

func (x *Change) GetModifyTable() *ModifyTable {
	if x, ok := x.GetValue().(*Change_ModifyTable); ok {
		return x.ModifyTable
	}
	return nil
}

func (x *Change) GetRenameTable() *RenameTable {
	if x, ok := x.GetValue().(*Change_RenameTable); ok {
		return x.RenameTable
	}
	return nil
}

func (x *Change) GetAddColumn() *AddColumn {
	if x, ok := x.GetValue().(*Change_AddColumn); ok {
		return x.AddColumn
	}
	return nil
}

func (x *Change) GetDropColumn() *DropColumn {
	if x, ok := x.GetValue().(*Change_DropColumn); ok {
		return x.DropColumn
	}
	return nil
}

func (x *Change) GetModifyColumn() *ModifyColumn {
	if x, ok := x.GetValue().(*Change_ModifyColumn); ok {
		return x.ModifyColumn
	}
	return nil
}

func (x *Change) GetRenameColumn() *RenameColumn {
	if x, ok := x.GetValue().(*Change_RenameColumn); ok {
		return x.RenameColumn
	}
	return nil
}

func (x *Change) GetAddIndex() *AddIndex {
	if x, ok := x.GetValue().(*Change_AddIndex); ok {
		return x.AddIndex
	}
	return nil
}

func (x *Change) GetDropIndex() *DropIndex {
	if x, ok := x.GetValue().(*Change_DropIndex); ok {
		return x.DropIndex
	}
	return nil
}

func (x *Change) GetModifyIndex() *ModifyIndex {
	if x, ok := x.GetValue().(*Change_ModifyIndex); ok {
		return x.ModifyIndex
	}
	return nil
}

func (x *Change) GetRenameIndex() *RenameIndex {
	if x, ok := x.GetValue().(*Change_RenameIndex); ok {
		return x.RenameIndex
	}
	return nil
}

func (x *Change) GetAddForeignKey() *AddForeignKey {
	if x, ok := x.GetValue().(*Change_AddForeignKey); ok {
		return x.AddForeignKey
	}
	return nil
}

func (x *Change) GetDropForeignKey() *DropForeignKey {
	if x, ok := x.GetValue().(*Change_DropForeignKey); ok {
		return x.DropForeignKey
	}
	return nil
}

func (x *Change) GetModifyForeignKey() *ModifyForeignKey {
	if x, ok := x.GetValue().(*Change_ModifyForeignKey); ok {
		return x.ModifyForeignKey
	}
	return nil
}

func (x *Change) GetAddCheck() *AddCheck {
	if x, ok := x.GetValue().(*Change_AddCheck); ok {
		return x.AddCheck
	}
	return nil
}

func (x *Change) GetDropCheck() *DropCheck {
	if x, ok := x.GetValue().(*Change_DropCheck); ok {
		return x.DropCheck
	}
	return nil
}

func (x *Change) GetModifyCheck() *ModifyCheck {
	if x, ok := x.GetValue().(*Change_ModifyCheck); ok {
		return x.ModifyCheck
	}
	return nil
}

func (x *Change) GetAddAttr() *AddAttr {
	if x, ok := x.GetValue().(*Change_AddAttr); ok {
		return x.AddAttr
	}
	return nil
}

func (x *Change) GetDropAttr() *DropAttr {
	if x, ok := x.GetValue().(*Change_DropAttr); ok {
		return x.DropAttr
	}
	return nil
}

func (x *Change) GetModifyAttr() *ModifyAttr {
	if x, ok := x.GetValue().(*Change_ModifyAttr); ok {
		return x.ModifyAttr
	}
	return nil
}

type isChange_Value interface {
	isChange_Value()
}

type Change_AddSchema struct {
	AddSchema *AddSchema `protobuf:"bytes,1,opt,name=add_schema,json=addSchema,proto3,oneof"`
}

type Change_DropSchema struct {
	DropSchema *DropSchema `protobuf:"bytes,2,opt,name=drop_schema,json=dropSchema,proto3,oneof"`
}

type Change_ModifySchema struct {
	ModifySchema *ModifySchema `protobuf:"bytes,3,opt,name=modify_schema,json=modifySchema,proto3,oneof"`
}

type Change_AddTable struct {
	AddTable *AddTable `protobuf:"bytes,4,opt,name=add_table,json=addTable,proto3,oneof"`
}

type Change_DropTable struct {
	DropTable *DropTable `protobuf:"bytes,5,opt,name=drop_table,json=dropTable,proto3,oneof"`
}

type Change_ModifyTable struct {
	ModifyTable *ModifyTable `protobuf:"bytes,6,opt,name=modify_table,json=modifyTable,proto3,oneof"`
}

type Change_RenameTable struct {
	RenameTable *RenameTable `protobuf:"bytes,7,opt,name=rename_table,json=renameTable,proto3,oneof"`
}

type Change_AddColumn struct {
	AddColumn *AddColumn `protobuf:"bytes,8,opt,name=add_column,json=addColumn,proto3,oneof"`
}

type Change_DropColumn struct {
	DropColumn *DropColumn `protobuf:"bytes,9,opt,name=drop_column,json=dropColumn,proto3,oneof"`
}

type Change_ModifyColumn struct {
	ModifyColumn *ModifyColumn `protobuf:"bytes,10,opt,name=modify_column,json=modifyColumn,proto3,oneof"`
}

type Change_RenameColumn struct {
	RenameColumn *RenameColumn `protobuf:"bytes,11,opt,name=rename_column,json=renameColumn,proto3,oneof"`
}

type Change_AddIndex struct {
	AddIndex *AddIndex `protobuf:"bytes,12,opt,name=add_index,json=addIndex,proto3,oneof"`
}

type Change_DropIndex struct {
	DropIndex *DropIndex `protobuf:"bytes,13,opt,name=drop_index,json=dropIndex,proto3,oneof"`
}

type Change_ModifyIndex struct {
	ModifyIndex *ModifyIndex `protobuf:"bytes,14,opt,name=modify_index,json=modifyIndex,proto3,oneof"`
}

type Change_RenameIndex struct {
	RenameIndex *RenameIndex `protobuf:"bytes,15,opt,name=rename_index,json=renameIndex,proto3,oneof"`
}

type Change_AddForeignKey struct {
	AddForeignKey *AddForeignKey `protobuf:"bytes,16,opt,name=add_foreign_key,json=addForeignKey,proto3,oneof"`
}

type Change_DropForeignKey struct {
	DropForeignKey *DropForeignKey `protobuf:"bytes,17,opt,name=drop_foreign_key,json=dropForeignKey,proto3,oneof"`
}

type Change_ModifyForeignKey struct {
	ModifyForeignKey *ModifyForeignKey `protobuf:"bytes,18,opt,name=modify_foreign_key,json=modifyForeignKey,proto3,oneof"`
}

type Change_AddCheck struct {
	AddCheck *AddCheck `protobuf:"bytes,19,opt,name=add_check,json=addCheck,proto3,oneof"`
}

type Change_DropCheck struct {
	DropCheck *DropCheck `protobuf:"bytes,20,opt,name=drop_check,json=dropCheck,proto3,oneof"`
}

type Change_ModifyCheck struct {
	ModifyCheck *ModifyCheck `protobuf:"bytes,21,opt,name=modify_check,json=modifyCheck,proto3,oneof"`
}

type Change_AddAttr struct {
	AddAttr *AddAttr `protobuf:"bytes,22,opt,name=add_attr,json=addAttr,proto3,oneof"`
}

type Change_DropAttr struct {
	DropAttr *DropAttr `protobuf:"bytes,23,opt,name=drop_attr,json=dropAttr,proto3,oneof"`
}

type Change_ModifyAttr struct {
	ModifyAttr *ModifyAttr `protobuf:"bytes,24,opt,name=modify_attr,json=modifyAttr,proto3,oneof"`
}

func (*Change_AddSchema) isChange_Value() {}

func (*Change_DropSchema) isChange_Value() {}

func (*Change_ModifySchema) isChange_Value() {}

func (*Change_AddTable) isChange_Value() {}

func (*Change_DropTable) isChange_Value() {}

func (*Change_ModifyTable) isChange_Value() {}

func (*Change_RenameTable) isChange_Value() {}

func (*Change_AddColumn) isChange_Value() {}

func (*Change_DropColumn) isChange_Value() {}

func (*Change_ModifyColumn) isChange_Value() {}

func (*Change_RenameColumn) isChange_Value() {}

func (*Change_AddIndex) isChange_Value() {}

func (*Change_DropIndex) isChange_Value() {}

func (*Change_ModifyIndex) isChange_Value() {}

func (*Change_RenameIndex) isChange_Value() {}

func (*Change_AddForeignKey) isChange_Value() {}

func (*Change_DropForeignKey) isChange_Value() {}

func (*Change_ModifyForeignKey) isChange_Value() {}

func (*Change_AddCheck) isChange_Value() {}

func (*Change_DropCheck) isChange_Value() {}

func (*Change_ModifyCheck) isChange_Value() {}

func (*Change_AddAttr) isChange_Value() {}

func (*Change_DropAttr) isChange_Value() {}

func (*Change_ModifyAttr) isChange_Value() {}

type AddSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *Schema   `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Extra  []*Clause `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *AddSchema) Reset() {
	*x = AddSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSchema) ProtoMessage() {}

func (x *AddSchema) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSchema.ProtoReflect.Descriptor instead.
func (*AddSchema) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{4}
}

func (x *AddSchema) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *AddSchema) GetExtra() []*Clause {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DropSchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema *Schema   `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Extra  []*Clause `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *DropSchema) Reset() {
	*x = DropSchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropSchema) ProtoMessage() {}

func (x *DropSchema) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropSchema.ProtoReflect.Descriptor instead.
func (*DropSchema) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{5}
}

func (x *DropSchema) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *DropSchema) GetExtra() []*Clause {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ModifySchema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema  *Schema   `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	Changes []*Change `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *ModifySchema) Reset() {
	*x = ModifySchema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifySchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifySchema) ProtoMessage() {}

func (x *ModifySchema) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifySchema.ProtoReflect.Descriptor instead.
func (*ModifySchema) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{6}
}

func (x *ModifySchema) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *ModifySchema) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type AddTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table    `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Extra []*Clause `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *AddTable) Reset() {
	*x = AddTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTable) ProtoMessage() {}

func (x *AddTable) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTable.ProtoReflect.Descriptor instead.
func (*AddTable) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{7}
}

func (x *AddTable) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *AddTable) GetExtra() []*Clause {
	if x != nil {
		return x.Extra
	}
	return nil
}

type DropTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table    `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Extra []*Clause `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty"`
}

func (x *DropTable) Reset() {
	*x = DropTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropTable) ProtoMessage() {}

func (x *DropTable) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropTable.ProtoReflect.Descriptor instead.
func (*DropTable) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{8}
}

func (x *DropTable) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *DropTable) GetExtra() []*Clause {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ModifyTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table   *Table    `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Changes []*Change `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *ModifyTable) Reset() {
	*x = ModifyTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyTable) ProtoMessage() {}

func (x *ModifyTable) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyTable.ProtoReflect.Descriptor instead.
func (*ModifyTable) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyTable) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *ModifyTable) GetChanges() []*Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type RenameTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Table `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Table `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *RenameTable) Reset() {
	*x = RenameTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameTable) ProtoMessage() {}

func (x *RenameTable) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameTable.ProtoReflect.Descriptor instead.
func (*RenameTable) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{10}
}

func (x *RenameTable) GetFrom() *Table {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RenameTable) GetTo() *Table {
	if x != nil {
		return x.To
	}
	return nil
}

type AddColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column *Column `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *AddColumn) Reset() {
	*x = AddColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddColumn) ProtoMessage() {}

func (x *AddColumn) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddColumn.ProtoReflect.Descriptor instead.
func (*AddColumn) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{11}
}

func (x *AddColumn) GetColumn() *Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type DropColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column *Column `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
}

func (x *DropColumn) Reset() {
	*x = DropColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropColumn) ProtoMessage() {}

func (x *DropColumn) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropColumn.ProtoReflect.Descriptor instead.
func (*DropColumn) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{12}
}

func (x *DropColumn) GetColumn() *Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type ModifyColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *Column `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *Column `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ChangeKind uint64  `protobuf:"varint,3,opt,name=change_kind,json=changeKind,proto3" json:"change_kind,omitempty"`
}

func (x *ModifyColumn) Reset() {
	*x = ModifyColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyColumn) ProtoMessage() {}

func (x *ModifyColumn) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyColumn.ProtoReflect.Descriptor instead.
func (*ModifyColumn) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{13}
}

func (x *ModifyColumn) GetFrom() *Column {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ModifyColumn) GetTo() *Column {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ModifyColumn) GetChangeKind() uint64 {
	if x != nil {
		return x.ChangeKind
	}
	return 0
}

type RenameColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Column `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Column `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *RenameColumn) Reset() {
	*x = RenameColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameColumn) ProtoMessage() {}

func (x *RenameColumn) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameColumn.ProtoReflect.Descriptor instead.
func (*RenameColumn) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{14}
}

func (x *RenameColumn) GetFrom() *Column {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RenameColumn) GetTo() *Column {
	if x != nil {
		return x.To
	}
	return nil
}

type AddIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *Index `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *AddIndex) Reset() {
	*x = AddIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIndex) ProtoMessage() {}

func (x *AddIndex) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIndex.ProtoReflect.Descriptor instead.
func (*AddIndex) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{15}
}

func (x *AddIndex) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

type DropIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index *Index `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *DropIndex) Reset() {
	*x = DropIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropIndex) ProtoMessage() {}

func (x *DropIndex) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropIndex.ProtoReflect.Descriptor instead.
func (*DropIndex) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{16}
}

func (x *DropIndex) GetIndex() *Index {
	if x != nil {
		return x.Index
	}
	return nil
}

type ModifyIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *Index `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *Index `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ChangeKind uint64 `protobuf:"varint,3,opt,name=change_kind,json=changeKind,proto3" json:"change_kind,omitempty"`
}

func (x *ModifyIndex) Reset() {
	*x = ModifyIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyIndex) ProtoMessage() {}

func (x *ModifyIndex) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyIndex.ProtoReflect.Descriptor instead.
func (*ModifyIndex) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{17}
}

func (x *ModifyIndex) GetFrom() *Index {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ModifyIndex) GetTo() *Index {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ModifyIndex) GetChangeKind() uint64 {
	if x != nil {
		return x.ChangeKind
	}
	return 0
}

type RenameIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Index `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Index `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *RenameIndex) Reset() {
	*x = RenameIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameIndex) ProtoMessage() {}

func (x *RenameIndex) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameIndex.ProtoReflect.Descriptor instead.
func (*RenameIndex) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{18}
}

func (x *RenameIndex) GetFrom() *Index {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *RenameIndex) GetTo() *Index {
	if x != nil {
		return x.To
	}
	return nil
}

type AddForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fk *ForeignKey `protobuf:"bytes,1,opt,name=fk,proto3" json:"fk,omitempty"`
}

func (x *AddForeignKey) Reset() {
	*x = AddForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForeignKey) ProtoMessage() {}

func (x *AddForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForeignKey.ProtoReflect.Descriptor instead.
func (*AddForeignKey) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{19}
}

func (x *AddForeignKey) GetFk() *ForeignKey {
	if x != nil {
		return x.Fk
	}
	return nil
}

type DropForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fk *ForeignKey `protobuf:"bytes,1,opt,name=fk,proto3" json:"fk,omitempty"`
}

func (x *DropForeignKey) Reset() {
	*x = DropForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropForeignKey) ProtoMessage() {}

func (x *DropForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropForeignKey.ProtoReflect.Descriptor instead.
func (*DropForeignKey) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{20}
}

func (x *DropForeignKey) GetFk() *ForeignKey {
	if x != nil {
		return x.Fk
	}
	return nil
}

type ModifyForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *ForeignKey `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *ForeignKey `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ChangeKind uint64      `protobuf:"varint,3,opt,name=change_kind,json=changeKind,proto3" json:"change_kind,omitempty"`
}

func (x *ModifyForeignKey) Reset() {
	*x = ModifyForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyForeignKey) ProtoMessage() {}

func (x *ModifyForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyForeignKey.ProtoReflect.Descriptor instead.
func (*ModifyForeignKey) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{21}
}

func (x *ModifyForeignKey) GetFrom() *ForeignKey {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ModifyForeignKey) GetTo() *ForeignKey {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ModifyForeignKey) GetChangeKind() uint64 {
	if x != nil {
		return x.ChangeKind
	}
	return 0
}

type AddCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check *Check `protobuf:"bytes,1,opt,name=check,proto3" json:"check,omitempty"`
}

func (x *AddCheck) Reset() {
	*x = AddCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCheck) ProtoMessage() {}

func (x *AddCheck) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCheck.ProtoReflect.Descriptor instead.
func (*AddCheck) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{22}
}

func (x *AddCheck) GetCheck() *Check {
	if x != nil {
		return x.Check
	}
	return nil
}

type DropCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check *Check `protobuf:"bytes,1,opt,name=check,proto3" json:"check,omitempty"`
}

func (x *DropCheck) Reset() {
	*x = DropCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropCheck) ProtoMessage() {}

func (x *DropCheck) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropCheck.ProtoReflect.Descriptor instead.
func (*DropCheck) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{23}
}

func (x *DropCheck) GetCheck() *Check {
	if x != nil {
		return x.Check
	}
	return nil
}

type ModifyCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       *Check `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To         *Check `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	ChangeKind uint64 `protobuf:"varint,3,opt,name=change_kind,json=changeKind,proto3" json:"change_kind,omitempty"`
}

func (x *ModifyCheck) Reset() {
	*x = ModifyCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyCheck) ProtoMessage() {}

func (x *ModifyCheck) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyCheck.ProtoReflect.Descriptor instead.
func (*ModifyCheck) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{24}
}

func (x *ModifyCheck) GetFrom() *Check {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ModifyCheck) GetTo() *Check {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ModifyCheck) GetChangeKind() uint64 {
	if x != nil {
		return x.ChangeKind
	}
	return 0
}

type AddAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *Attr `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *AddAttr) Reset() {
	*x = AddAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAttr) ProtoMessage() {}

func (x *AddAttr) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAttr.ProtoReflect.Descriptor instead.
func (*AddAttr) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{25}
}

func (x *AddAttr) GetAttr() *Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type DropAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *Attr `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
}

func (x *DropAttr) Reset() {
	*x = DropAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DropAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropAttr) ProtoMessage() {}

func (x *DropAttr) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropAttr.ProtoReflect.Descriptor instead.
func (*DropAttr) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{26}
}

func (x *DropAttr) GetAttr() *Attr {
	if x != nil {
		return x.Attr
	}
	return nil
}

type ModifyAttr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Attr `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Attr `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ModifyAttr) Reset() {
	*x = ModifyAttr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kwil_schema_plan_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyAttr) ProtoMessage() {}

func (x *ModifyAttr) ProtoReflect() protoreflect.Message {
	mi := &file_kwil_schema_plan_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyAttr.ProtoReflect.Descriptor instead.
func (*ModifyAttr) Descriptor() ([]byte, []int) {
	return file_kwil_schema_plan_proto_rawDescGZIP(), []int{27}
}

func (x *ModifyAttr) GetFrom() *Attr {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ModifyAttr) GetTo() *Attr {
	if x != nil {
		return x.To
	}
	return nil
}

var File_kwil_schema_plan_proto protoreflect.FileDescriptor

var file_kwil_schema_plan_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6b, 0x77, 0x69, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6c,
	0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x62, 0x1a, 0x18, 0x6b, 0x77, 0x69, 0x6c, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08,
	0x49, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x49, 0x66, 0x4e, 0x6f,
	0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x06, 0x43, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x69, 0x66, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62,
	0x2e, 0x49, 0x66, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x08, 0x69, 0x66, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x69, 0x66, 0x5f, 0x6e, 0x6f, 0x74, 0x5f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x66, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x84, 0x0b, 0x0a, 0x06,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48,
	0x00, 0x52, 0x09, 0x61, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x37, 0x0a, 0x0b,
	0x64, 0x72, 0x6f, 0x70, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f,
	0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61,
	0x64, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a,
	0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x37, 0x0a, 0x0b, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x08, 0x61, 0x64, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00,
	0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3a, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3a, 0x0a, 0x0c, 0x72, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x41, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x72,
	0x6f, 0x70, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x12,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x08, 0x61, 0x64, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x0a, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x3a, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x2e, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x74,
	0x74, 0x72, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x41, 0x74, 0x74, 0x72, 0x12, 0x31, 0x0a,
	0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x48, 0x00, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x5d, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x22, 0x5e, 0x0a, 0x0a, 0x44, 0x72, 0x6f, 0x70, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x22, 0x64, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2a, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x22, 0x5a, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x25, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62,
	0x2e, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x60,
	0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x22, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x23, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x36, 0x0a, 0x0a,
	0x44, 0x72, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x22, 0x77, 0x0a, 0x0c, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x56, 0x0a,
	0x0c, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x24, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x32, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x74, 0x0a, 0x0b,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x69,
	0x6e, 0x64, 0x22, 0x53, 0x0a, 0x0b, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x6f,
	0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x02, 0x66, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x66, 0x6b, 0x22, 0x36,
	0x0a, 0x0e, 0x44, 0x72, 0x6f, 0x70, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x24, 0x0a, 0x02, 0x66, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b,
	0x65, 0x79, 0x52, 0x02, 0x66, 0x6b, 0x22, 0x83, 0x01, 0x0a, 0x10, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x31, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22,
	0x32, 0x0a, 0x09, 0x44, 0x72, 0x6f, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x05,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x22, 0x74, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x2d, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x41, 0x74, 0x74, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x2e, 0x0a, 0x08, 0x44, 0x72, 0x6f, 0x70,
	0x41, 0x74, 0x74, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x52, 0x04, 0x61, 0x74, 0x74, 0x72, 0x22, 0x50, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x41, 0x74, 0x74, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x62, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70,
	0x62, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x42, 0x17, 0x5a, 0x15, 0x6b, 0x77,
	0x69, 0x6c, 0x2f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kwil_schema_plan_proto_rawDescOnce sync.Once
	file_kwil_schema_plan_proto_rawDescData = file_kwil_schema_plan_proto_rawDesc
)

func file_kwil_schema_plan_proto_rawDescGZIP() []byte {
	file_kwil_schema_plan_proto_rawDescOnce.Do(func() {
		file_kwil_schema_plan_proto_rawDescData = protoimpl.X.CompressGZIP(file_kwil_schema_plan_proto_rawDescData)
	})
	return file_kwil_schema_plan_proto_rawDescData
}

var file_kwil_schema_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_kwil_schema_plan_proto_goTypes = []interface{}{
	(*IfExists)(nil),         // 0: schemapb.IfExists
	(*IfNotExists)(nil),      // 1: schemapb.IfNotExists
	(*Clause)(nil),           // 2: schemapb.Clause
	(*Change)(nil),           // 3: schemapb.Change
	(*AddSchema)(nil),        // 4: schemapb.AddSchema
	(*DropSchema)(nil),       // 5: schemapb.DropSchema
	(*ModifySchema)(nil),     // 6: schemapb.ModifySchema
	(*AddTable)(nil),         // 7: schemapb.AddTable
	(*DropTable)(nil),        // 8: schemapb.DropTable
	(*ModifyTable)(nil),      // 9: schemapb.ModifyTable
	(*RenameTable)(nil),      // 10: schemapb.RenameTable
	(*AddColumn)(nil),        // 11: schemapb.AddColumn
	(*DropColumn)(nil),       // 12: schemapb.DropColumn
	(*ModifyColumn)(nil),     // 13: schemapb.ModifyColumn
	(*RenameColumn)(nil),     // 14: schemapb.RenameColumn
	(*AddIndex)(nil),         // 15: schemapb.AddIndex
	(*DropIndex)(nil),        // 16: schemapb.DropIndex
	(*ModifyIndex)(nil),      // 17: schemapb.ModifyIndex
	(*RenameIndex)(nil),      // 18: schemapb.RenameIndex
	(*AddForeignKey)(nil),    // 19: schemapb.AddForeignKey
	(*DropForeignKey)(nil),   // 20: schemapb.DropForeignKey
	(*ModifyForeignKey)(nil), // 21: schemapb.ModifyForeignKey
	(*AddCheck)(nil),         // 22: schemapb.AddCheck
	(*DropCheck)(nil),        // 23: schemapb.DropCheck
	(*ModifyCheck)(nil),      // 24: schemapb.ModifyCheck
	(*AddAttr)(nil),          // 25: schemapb.AddAttr
	(*DropAttr)(nil),         // 26: schemapb.DropAttr
	(*ModifyAttr)(nil),       // 27: schemapb.ModifyAttr
	(*Schema)(nil),           // 28: schemapb.Schema
	(*Table)(nil),            // 29: schemapb.Table
	(*Column)(nil),           // 30: schemapb.Column
	(*Index)(nil),            // 31: schemapb.Index
	(*ForeignKey)(nil),       // 32: schemapb.ForeignKey
	(*Check)(nil),            // 33: schemapb.Check
	(*Attr)(nil),             // 34: schemapb.Attr
}
var file_kwil_schema_plan_proto_depIdxs = []int32{
	0,  // 0: schemapb.Clause.if_exists:type_name -> schemapb.IfExists
	1,  // 1: schemapb.Clause.if_not_exists:type_name -> schemapb.IfNotExists
	4,  // 2: schemapb.Change.add_schema:type_name -> schemapb.AddSchema
	5,  // 3: schemapb.Change.drop_schema:type_name -> schemapb.DropSchema
	6,  // 4: schemapb.Change.modify_schema:type_name -> schemapb.ModifySchema
	7,  // 5: schemapb.Change.add_table:type_name -> schemapb.AddTable
	8,  // 6: schemapb.Change.drop_table:type_name -> schemapb.DropTable
	9,  // 7: schemapb.Change.modify_table:type_name -> schemapb.ModifyTable
	10, // 8: schemapb.Change.rename_table:type_name -> schemapb.RenameTable
	11, // 9: schemapb.Change.add_column:type_name -> schemapb.AddColumn
	12, // 10: schemapb.Change.drop_column:type_name -> schemapb.DropColumn
	13, // 11: schemapb.Change.modify_column:type_name -> schemapb.ModifyColumn
	14, // 12: schemapb.Change.rename_column:type_name -> schemapb.RenameColumn
	15, // 13: schemapb.Change.add_index:type_name -> schemapb.AddIndex
	16, // 14: schemapb.Change.drop_index:type_name -> schemapb.DropIndex
	17, // 15: schemapb.Change.modify_index:type_name -> schemapb.ModifyIndex
	18, // 16: schemapb.Change.rename_index:type_name -> schemapb.RenameIndex
	19, // 17: schemapb.Change.add_foreign_key:type_name -> schemapb.AddForeignKey
	20, // 18: schemapb.Change.drop_foreign_key:type_name -> schemapb.DropForeignKey
	21, // 19: schemapb.Change.modify_foreign_key:type_name -> schemapb.ModifyForeignKey
	22, // 20: schemapb.Change.add_check:type_name -> schemapb.AddCheck
	23, // 21: schemapb.Change.drop_check:type_name -> schemapb.DropCheck
	24, // 22: schemapb.Change.modify_check:type_name -> schemapb.ModifyCheck
	25, // 23: schemapb.Change.add_attr:type_name -> schemapb.AddAttr
	26, // 24: schemapb.Change.drop_attr:type_name -> schemapb.DropAttr
	27, // 25: schemapb.Change.modify_attr:type_name -> schemapb.ModifyAttr
	28, // 26: schemapb.AddSchema.schema:type_name -> schemapb.Schema
	2,  // 27: schemapb.AddSchema.extra:type_name -> schemapb.Clause
	28, // 28: schemapb.DropSchema.schema:type_name -> schemapb.Schema
	2,  // 29: schemapb.DropSchema.extra:type_name -> schemapb.Clause
	28, // 30: schemapb.ModifySchema.schema:type_name -> schemapb.Schema
	3,  // 31: schemapb.ModifySchema.changes:type_name -> schemapb.Change
	29, // 32: schemapb.AddTable.table:type_name -> schemapb.Table
	2,  // 33: schemapb.AddTable.extra:type_name -> schemapb.Clause
	29, // 34: schemapb.DropTable.table:type_name -> schemapb.Table
	2,  // 35: schemapb.DropTable.extra:type_name -> schemapb.Clause
	29, // 36: schemapb.ModifyTable.table:type_name -> schemapb.Table
	3,  // 37: schemapb.ModifyTable.changes:type_name -> schemapb.Change
	29, // 38: schemapb.RenameTable.from:type_name -> schemapb.Table
	29, // 39: schemapb.RenameTable.to:type_name -> schemapb.Table
	30, // 40: schemapb.AddColumn.column:type_name -> schemapb.Column
	30, // 41: schemapb.DropColumn.column:type_name -> schemapb.Column
	30, // 42: schemapb.ModifyColumn.from:type_name -> schemapb.Column
	30, // 43: schemapb.ModifyColumn.to:type_name -> schemapb.Column
	30, // 44: schemapb.RenameColumn.from:type_name -> schemapb.Column
	30, // 45: schemapb.RenameColumn.to:type_name -> schemapb.Column
	31, // 46: schemapb.AddIndex.index:type_name -> schemapb.Index
	31, // 47: schemapb.DropIndex.index:type_name -> schemapb.Index
	31, // 48: schemapb.ModifyIndex.from:type_name -> schemapb.Index
	31, // 49: schemapb.ModifyIndex.to:type_name -> schemapb.Index
	31, // 50: schemapb.RenameIndex.from:type_name -> schemapb.Index
	31, // 51: schemapb.RenameIndex.to:type_name -> schemapb.Index
	32, // 52: schemapb.AddForeignKey.fk:type_name -> schemapb.ForeignKey
	32, // 53: schemapb.DropForeignKey.fk:type_name -> schemapb.ForeignKey
	32, // 54: schemapb.ModifyForeignKey.from:type_name -> schemapb.ForeignKey
	32, // 55: schemapb.ModifyForeignKey.to:type_name -> schemapb.ForeignKey
	33, // 56: schemapb.AddCheck.check:type_name -> schemapb.Check
	33, // 57: schemapb.DropCheck.check:type_name -> schemapb.Check
	33, // 58: schemapb.ModifyCheck.from:type_name -> schemapb.Check
	33, // 59: schemapb.ModifyCheck.to:type_name -> schemapb.Check
	34, // 60: schemapb.AddAttr.attr:type_name -> schemapb.Attr
	34, // 61: schemapb.DropAttr.attr:type_name -> schemapb.Attr
	34, // 62: schemapb.ModifyAttr.from:type_name -> schemapb.Attr
	34, // 63: schemapb.ModifyAttr.to:type_name -> schemapb.Attr
	64, // [64:64] is the sub-list for method output_type
	64, // [64:64] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_kwil_schema_plan_proto_init() }
func file_kwil_schema_plan_proto_init() {
	if File_kwil_schema_plan_proto != nil {
		return
	}
	file_kwil_schema_schema_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_kwil_schema_plan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfExists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfNotExists); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropSchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifySchema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DropAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kwil_schema_plan_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyAttr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_kwil_schema_plan_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Clause_IfExists)(nil),
		(*Clause_IfNotExists)(nil),
	}
	file_kwil_schema_plan_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Change_AddSchema)(nil),
		(*Change_DropSchema)(nil),
		(*Change_ModifySchema)(nil),
		(*Change_AddTable)(nil),
		(*Change_DropTable)(nil),
		(*Change_ModifyTable)(nil),
		(*Change_RenameTable)(nil),
		(*Change_AddColumn)(nil),
		(*Change_DropColumn)(nil),
		(*Change_ModifyColumn)(nil),
		(*Change_RenameColumn)(nil),
		(*Change_AddIndex)(nil),
		(*Change_DropIndex)(nil),
		(*Change_ModifyIndex)(nil),
		(*Change_RenameIndex)(nil),
		(*Change_AddForeignKey)(nil),
		(*Change_DropForeignKey)(nil),
		(*Change_ModifyForeignKey)(nil),
		(*Change_AddCheck)(nil),
		(*Change_DropCheck)(nil),
		(*Change_ModifyCheck)(nil),
		(*Change_AddAttr)(nil),
		(*Change_DropAttr)(nil),
		(*Change_ModifyAttr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kwil_schema_plan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kwil_schema_plan_proto_goTypes,
		DependencyIndexes: file_kwil_schema_plan_proto_depIdxs,
		MessageInfos:      file_kwil_schema_plan_proto_msgTypes,
	}.Build()
	File_kwil_schema_plan_proto = out.File
	file_kwil_schema_plan_proto_rawDesc = nil
	file_kwil_schema_plan_proto_goTypes = nil
	file_kwil_schema_plan_proto_depIdxs = nil
}
