on:
  push:
    branches: [ 'test/*' ]
  workflow_dispatch:
    branches: [ 'test/*' ]
    
name: kwild-aws-push

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.0' # The Go version to download (if necessary) and use.

    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build kwild, tag, and push docker image to Amazon ECR (used with ECS Fargate)
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_KWILD_ECR }}
        IMAGE_HASH_TAG: ${{ github.sha }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR
        #docker build -f ./docker/kwild.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:kd$IMAGE_HASH_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -f ./docker/kwild.dockerfile -t $ECR_REGISTRY/358914811005.dkr.ecr.us-east-1.amazonaws.com/kwild:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY --all-tags" >> $GITHUB_OUTPUT

    - name: Build kwil-gateway, tag, and push docker image to Amazon ECR (used with ECS Fargate)
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.AWS_KWIL_GATEWAY_ECR }}
        IMAGE_HASH_TAG: ${{ github.sha }}
        IMAGE_TAG: kglatest
      run: |
        # Build a docker container and push it to ECR
        #docker build -f ./docker/kwil-gateway.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:kg$IMAGE_HASH_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -f ./docker/kwil-gateway.dockerfile -t $ECR_REGISTRY/358914811005.dkr.ecr.us-east-1.amazonaws.com/kwil-gateway:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY --all-tags" >> $GITHUB_OUTPUT