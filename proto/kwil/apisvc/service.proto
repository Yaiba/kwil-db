syntax = "proto3";
package apisvc;
option go_package = "kwil/x/proto/apipb";

import "google/api/annotations.proto";

import "kwil/apisvc/wallets.proto";
import "kwil/apisvc/metadata.proto";
import "kwil/apisvc/crud.proto";
import "kwil/apisvc/schema.proto";
import "kwil/pricingsvc/pricing.proto";

service KwilService {
  rpc Connect(ConnectRequest) returns (ConnectResponse) {
    option (google.api.http) = {
      get: "/api/v0/connect"
    };
  }


  rpc DeploySchema(DeploySchemaRequest) returns (DeploySchemaResponse) {
    option (google.api.http) = {
      post: "/api/v0/schema"
      body: "*"
    };
  }

  rpc DropSchema(DropSchemaRequest) returns (DropSchemaResponse) {
    option (google.api.http) = {
      post: "/api/v0/drop-schema"
      body: "*"
    };
  }


  rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {
    option (google.api.http) = {
      get: "/api/v0/{owner}/{database}/metadata"
    };
  }
  

  rpc Write (WriteRequest) returns (WriteResponse) {
    option (google.api.http) = {
      post: "/api/v0/write"
      body: "*"
    };
  }

  rpc Read (ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {
      post: "/api/v0/read"
      body: "*"
    };
  }

  // Wallets
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (google.api.http) = {
      get: "/api/v0/wallets/{wallet}/balance"
    };
  }
  rpc ReturnFunds(WithdrawalRequest) returns (WithdrawalResponse) {
    option (google.api.http) = {
      post: "/api/v0/wallets/withdraw"
      body: "*"
    };
  }
  rpc EstimateCost(pricing.EstimateRequest) returns (pricing.EstimateResponse) {
    option (google.api.http) = {
      post: "/api/v0/pricing/estimate"
      body: "*"
    };
  }
}

message ConnectRequest {}
message ConnectResponse {
    string address = 1;
}

