syntax = "proto3";
package apisvc;
option go_package = "kwil/x/proto/apipb";

import "google/api/annotations.proto";

import "kwil/apisvc/wallets.proto";
import "kwil/apisvc/metadata.proto";
import "kwil/apisvc/crud.proto";

service KwilService {
  rpc Connect(ConnectRequest) returns (ConnectResponse) {
    option (google.api.http) = {
      get: "/api/v0/connect"
    };
  }


  rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {
    option (google.api.http) = {
      get: "/api/v0/{owner}/{name}/metadata"
    };
  }

  rpc Cud (CUDRequest) returns (CUDResponse) {
    option (google.api.http) = {
      post: "/api/v0/write"
      body: "*"
    };
  }

  rpc Read (ReadRequest) returns (ReadResponse) {
    option (google.api.http) = {
      post: "/api/v0/read"
      body: "*"
    };
  }

  // Wallets
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (google.api.http) = {
      get: "/api/v0/wallets/{wallet}/balance"
    };
  }
  rpc ReturnFunds(ReturnFundsRequest) returns (ReturnFundsResponse) {
    option (google.api.http) = {
      post: "/api/v0/wallets/withdraw"
      body: "*"
    };
  }
  rpc EstimateCost(EstimateCostRequest) returns (EstimateCostResponse) {
    option (google.api.http) = {
      post: "/api/v0/wallets/estimate"
      body: "*"
    };
  }
}

message PlanRequest {
  string id = 1;
  string hash = 2;
  string dbName = 3;
  string owner = 4;
  string from = 5;
  bytes schema = 6;
  string signature = 7;
}
message PlanResponse {}
message ApplyRequest {
  string id = 1;
  string planId = 2;
  string fee = 3;
  string nonce = 4;
  string from = 5;
  string signature = 6;
}
message ApplyResponse {
  bool success = 1;
}
message ConnectRequest {}
message ConnectResponse {
    string address = 1;
}

