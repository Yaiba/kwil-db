apiVersion: apps/v1
kind: Deployment
metadata:
  name: kwil-kwild-deployment
  labels:
    kwil/deploy: kwild
    kwil/component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      kwil/app: kwild
  template:
    metadata:
      labels:
        kwil/app: kwild
    spec:
      containers:
      - name: kwild
        image: kwild:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8082
          name: kwil-gw-svc
        - containerPort: 50051
          name: kwil-grpc-svc
        envFrom:
        - configMapRef:
            name: kwil-postgres-config
        - configMapRef:
            name: kwil-kwild-config
        env:
        - name: PG_DATABASE_URL
          # value: "postgres://$(PG_USER):$(PG_PASSWORD)@$(PG_HOST)/$(PG_DEFAULT_DB)?sslmode=$(PG_SSL_MODE)"
          value: "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DEFAULT_DB)?sslmode=$(POSTGRES_SSL_MODE)"
        - name: KWIL_GRAPHQL_ENDPOINT
          value: "http://$(KWIL_GRAPHQL_HOST):$(KWIL_GRAPHQL_PORT)"
        volumeMounts: # mount into container
          - name: keys-mnt
            mountPath: /app/keys.json
            subPath: keys.json
            readOnly: true
      initContainers:
        - name: init-wait-db-service
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          # TODO: using template
          command: ['sh', '-c', "until nslookup kwil-postgres-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for kwil-postgres-service; sleep 2; done"]
        - name: init-wait-graphql-service
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          # TODO: using template
          command: ['sh', '-c', "until nslookup kwil-hasura-service.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for kwil-postgres-service; sleep 2; done"]          
        - name: init-wait-postgres
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: kwil-postgres-config
          # env:
          #   - name: PG_HOST
          #     valueFrom:
          #       confks igMapKeyRef:
          #         name: kwil-postgres-config
          #         key: host
          #   - name: PG_PORT
          #     valueFrom:
          #       configMapKeyRef:
          #         name: kwil-postgres-config
          #         key: port
          command: ["sh", "-c", "echo scan ${POSTGRES_HOST}:${POSTGRES_PORT}; for i in $(seq 1 300); do nc -zvw1 ${POSTGRES_HOST} ${POSTGRES_PORT} && exit 0 || sleep 3; done; exit 1"]      
        - name: init-wait-hasura
          image: busybox:1.35.0
          imagePullPolicy: IfNotPresent
          envFrom:
          - configMapRef:
              name: kwil-kwild-config
          command: ["sh", "-c", "echo scan ${KWIL_GRAPHQL_HOST}:${KWIL_GRAPHQL_PORT}; for i in $(seq 1 300); do nc -zvw1 ${KWIL_GRAPHQL_HOST} ${KWIL_GRAPHQL_PORT} && exit 0 || sleep 3; done; exit 1"]
      volumes: # mount into pod
      - name: keys-mnt
        configMap:
          name: kwil-kwild-config-file

---
apiVersion: v1
kind: Service
metadata:
  name: kwil-kwild-service
spec:
  selector:
    kwil/app: kwild
  type: NodePort
  ports:
    - name: kwil-gw
      protocol: TCP
      port: 8082
      targetPort: 8082
      nodePort: 32102
    - name: kwil-grpc
      protocol: TCP
      port: 50051
      targetPort: 50051
      nodePort: 32101
