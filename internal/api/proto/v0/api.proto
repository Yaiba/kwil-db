syntax = "proto3";
package api.v0;
option go_package = "github.com/kwilteam/kwil-db/internal/api/v0";

import "google/api/annotations.proto";

service KwilService {
  rpc Connect(ConnectRequest) returns (ConnectResponse) {
    option (google.api.http) = {
      get: "/api/v0/connect"
    };
  }

  // Databases
  rpc CreateDatabase(CreateDatabaseRequest) returns (CreateDatabaseResponse) {
    option (google.api.http) = {
      post: "/api/v0/databases"
      body: "*"
    };
  }
  rpc ListDatabases(ListDatabasesRequest) returns (ListDatabasesResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases"
    };
  }
  rpc GetDatabase(GetDatabaseRequest) returns (GetDatabaseResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{id}"
    };
  }
  rpc UpdateDatabase(UpdateDatabaseRequest) returns (UpdateDatabaseResponse) {
    option (google.api.http) = {
      put: "/api/v0/databases/{id}"
      body: "*"
    };
  }
  rpc DeleteDatabase(DeleteDatabaseRequest) returns (DeleteDatabaseResponse) {
    option (google.api.http) = {
      delete: "/api/v0/databases/{id}"
    };
  }

  // Tables
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse) {
    option (google.api.http) = {
      post: "/api/v0/databases/{databaseId}/tables"
      body: "*"
    };
  }
  rpc ListTables(ListTablesRequest) returns (ListTablesResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{databaseId}/tables"
    };
  }
  rpc GetTable(GetTableRequest) returns (GetTableResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{databaseId}/tables/{id}"
    };
  }
  rpc UpdateTable(UpdateTableRequest) returns (UpdateTableResponse) {
    option (google.api.http) = {
      put: "/api/v0/databases/{databaseId}/tables/{id}"
      body: "*"
    };
  }
  rpc DeleteTable(DeleteTableRequest) returns (DeleteTableResponse) {
    option (google.api.http) = {
      delete: "/api/v0/databases/{databaseId}/tables/{id}"
    };
  }

  // Roles
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post: "/api/v0/databases/{databaseId}/roles"
      body: "*"
    };
  }
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{databaseId}/roles"
    };
  }
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{databaseId}/roles/{id}"
    };
  }
  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
    option (google.api.http) = {
      put: "/api/v0/databases/{databaseId}/roles/{id}"
      body: "*"
    };
  }
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {
    option (google.api.http) = {
      delete: "/api/v0/databases/{databaseId}/roles/{id}"
    };
  }

  // Queries
  rpc PostQuery(PostQueryRequest) returns (PostQueryResponse) { // this is for submitting data to Kwil
    option (google.api.http) = {
      post: "/api/v0/databases/{databaseId}/query"
      body: "*"
    };
  }
  rpc GetQueries(GetQueriesRequest) returns (GetQueriesResponse) {
    option (google.api.http) = {
      get: "/api/v0/databases/{databaseId}/queries"
    };
  }

  // Wallets
  rpc GetBalance(GetBalanceRequest) returns (GetBalanceResponse) {
    option (google.api.http) = {
      get: "/api/v0/wallets/{id}/balance"
    };
  }
  rpc GetWalletRole(GetWalletRoleRequest) returns (GetWalletRoleResponse) {
    option (google.api.http) = {
      get: "/api/v0/wallets/{id}/{databaseId}/role"
    };
  }
}

message ConnectRequest {}
message ConnectResponse {
    string address = 1;
}

message CreateDatabaseRequest {
    string id = 1;
    string name = 2;
    string type = 3;
    string fee = 4;
    int32 operation = 5;
    int32 crud = 6;
    string from = 7;
    string signature = 8;
}
message CreateDatabaseResponse {}

message UpdateDatabaseRequest {
  string id = 1;
  string name = 2;
  string owner = 3;
  string fee = 4;
  int32 operation = 5;
  int32 crud = 6;
  string instructions = 7;
  string from = 8;
  string nonce = 9;
  string signature = 10;
}
message UpdateDatabaseResponse {}

message ListDatabasesRequest {}
message ListDatabasesResponse {}

message GetDatabaseRequest {
  string id = 1;
}
message GetDatabaseResponse {}
message DeleteDatabaseRequest {
  string id = 1;
}
message DeleteDatabaseResponse {}

message CreateTableRequest {
  string databaseId = 1;
}
message CreateTableResponse {}
message ListTablesRequest {
  string databaseId = 1;
}
message ListTablesResponse {}
message GetTableRequest {
  string id = 1;
  string databaseId = 2;
}
message GetTableResponse {}
message UpdateTableRequest {
  string id = 1;
  string databaseId = 2;
}
message UpdateTableResponse {}
message DeleteTableRequest {
  string id = 1;
  string databaseId = 2;
}
message DeleteTableResponse {}

message CreateRoleRequest {
  string databaseId = 1;
}
message CreateRoleResponse {}
message ListRolesRequest {
  string databaseId = 1;
}
message ListRolesResponse {
  repeated string roles = 1;
}
message GetRoleRequest {
  string id = 1;
  string databaseId = 2;
}
message GetRoleResponse {
  string name = 1;
  message perms {
    bool ddl = 1;
    repeated string queries = 2;
  };
  perms permissions = 2;
}

message UpdateRoleRequest {
  string id = 1;
  string databaseId = 2;
}
message UpdateRoleResponse {}
message DeleteRoleRequest {
  string id = 1;
  string databaseId = 2;
}
message DeleteRoleResponse {}

message PostQueryRequest {
  string databaseId = 1;
  string query = 2;
  string from = 3;
  string signature = 4;
}
message PostQueryResponse {}

message GetQueriesRequest {
  string databaseId = 1;
}
message GetQueriesResponse {
  repeated Query queries = 1;
}

message input {
  string name = 1;
  string type = 2;
};

message Query{
  string name = 1;
  string query = 2;
  repeated input parameters = 3;
}

message GetBalanceRequest {
  string id = 1;
}
message GetBalanceResponse {
  string balance = 1;
}

message GetWalletRoleRequest {
  string id = 1;
  string databaseId = 2;
}

message GetWalletRoleResponse {
  string name = 1;
  message perms {
    bool ddl = 1;
    repeated string queries = 2;
  };
  perms permissions = 2;
}