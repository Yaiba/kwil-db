// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: tables_relinfo.sql

package gen

import (
	"context"
)

const getIndexedColumnCount = `-- name: GetIndexedColumnCount :one
SELECT
    count(*)
FROM
    pg_catalog.pg_indexes
WHERE
    schemaname = $1
    AND tablename = $2
`

type GetIndexedColumnCountParams struct {
	Schemaname interface{}
	Tablename  interface{}
}

func (q *Queries) GetIndexedColumnCount(ctx context.Context, arg *GetIndexedColumnCountParams) (int64, error) {
	row := q.queryRow(ctx, q.getIndexedColumnCountStmt, getIndexedColumnCount, arg.Schemaname, arg.Tablename)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const getTableSize = `-- name: GetTableSize :one
SELECT
    pg_relation_size(relid)
FROM
    pg_catalog.pg_statio_user_tables
WHERE
    schemaname = $1
    AND relname = $2
`

type GetTableSizeParams struct {
	Schemaname interface{}
	Relname    interface{}
}

func (q *Queries) GetTableSize(ctx context.Context, arg *GetTableSizeParams) (int64, error) {
	row := q.queryRow(ctx, q.getTableSizeStmt, getTableSize, arg.Schemaname, arg.Relname)
	var pg_relation_size int64
	err := row.Scan(&pg_relation_size)
	return pg_relation_size, err
}
