version: "3"

tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Builds the project
    deps: [build:cli, build:api, build:api-gateway]

  build:cli:
    desc: Builds the CLI
    cmds:
      - go build -o ./.build/kwil-cli ./cmd/kwil-cli
    generates:
      - .build/kwil-cli

  build:api:
    desc: Builds the API
    deps: [build:api:pb, build:pricing:pb, build:deposit:pb, build:accounts:pb, build:tx:pb]
    cmds:
      - go build -o ./.build/kwild ./cmd/kwild
    generates:
      - .build/kwild

  build:api:pb:
    desc: Compiles the protobuf for the API
    cmds:
      - |
        mkdir -p x/proto
        protoc -I proto \
        --go_out=. --go_opt module=kwil \
        --go-grpc_out=. --go-grpc_opt module=kwil \
        --grpc-gateway_out=. --grpc-gateway_opt module=kwil --grpc-gateway_opt generate_unbound_methods=true \
        --openapiv2_out=. --openapiv2_opt allow_merge=true --openapiv2_opt merge_file_name=x/proto/apipb/api \
        proto/kwil/apisvc/*.proto
    sources:
      - proto/kwil/apisvc/*.proto
    generates:
      - x/proto/apipb/*

  build:pricing:pb:
    desc: Compiles the protobuf for the Pricing Service
    cmds:
      - |
        mkdir -p x/proto
        protoc -I proto \
        --go_out=. --go_opt module=kwil \
        --go-grpc_out=. --go-grpc_opt module=kwil \
        --grpc-gateway_out=. --grpc-gateway_opt module=kwil --grpc-gateway_opt generate_unbound_methods=true \
        --openapiv2_out=. --openapiv2_opt allow_merge=true --openapiv2_opt merge_file_name=x/proto/pricingpb/api \
        proto/kwil/pricingsvc/*.proto
    sources:
      - proto/kwil/pricingsvc/*.proto
    generates:
      - x/proto/pricingpb/*

  build:deposit:pb:
    desc: Compiles the protobuf for the deposit service
    cmds:
      - |
        mkdir -p x/proto
        protoc -I proto \
        --go_out=. --go_opt module=kwil \
        --go-grpc_out=. --go-grpc_opt module=kwil \
        proto/kwil/depositsvc/*.proto
    sources:
      - proto/kwil/depositsvc/*.proto
    generates:
      - x/proto/depositpb/*

  build:accounts:pb:
    desc: Compiles the protobuf for Accounts
    cmds:
      - |
        mkdir -p x/proto
        protoc -I proto \
        --go_out=. --go_opt module=kwil \
        --go-grpc_out=. --go-grpc_opt module=kwil \
        proto/kwil/accountsvc/*.proto
    sources:
      - proto/kwil/accountsvc/*.proto
    generates:
      - x/proto/accountspb/*
  
  build:tx:pb:
    desc: Compiles the protobuf for Txsvc
    cmds:
      - |
        mkdir -p x/proto
        protoc -I proto \
        --go_out=. --go_opt module=kwil \
        --go-grpc_out=. --go-grpc_opt module=kwil \
        proto/kwil/txsvc/*.proto
    sources:
      - proto/kwil/txsvc/*.proto
    generates:
      - x/proto/txpb/*
  
  build:sql:
    desc: Generates the SQL repository
    cmds:
      - sqlc generate
    sources:
      - kwil/sql/*.sql
    generates:
      - kwil/repository/gen

  build:docker:kwil-gateway:
    desc: Build the docker image for kwil-gateway
    cmds:
      - docker build . -t kwil-gateway:latest -f docker/kwil-gateway.dockerfile

  build:docker:kwild:
    desc: Build the docker image for the kwild
    cmds:
      - docker build . -t kwild:latest -f docker/kwild.dockerfile

  build:api-gateway:
    desc: Builds the API Gateway
    cmds:
      - go build -o ./.build/kwil-gateway ./cmd/kwil-gateway
    generates:
      - .build/kwil-gateway

  build:abi:
    desc: Builds Golang bindings for EVM contract ABIs
    cmds:
      - abigen --abi ./abi/escrow.json --pkg abi --type Escrow --out ./abi/escrow.go
      - abigen --abi ./abi/erc20.json --pkg abi --type Erc20 --out ./abi/erc20.go

  ############################ k8s ############################
  k8s:kwil:
    desc: Build and deploy kwil services to local k8s cluster
    cmds:
      - docker build . -t kwild:latest -f docker/kwild.dockerfile
      - docker build . -t kwil-gateway:latest -f docker/kwil-gateway.dockerfile
      - helm install kwil k8s/helm/kwil -f k8s/helm/kwil/dev-values.yaml

  k8s:kwil:install:
    desc: Deploy kwil services to local k8s cluster
    cmds:
      - helm install kwil k8s/helm/kwil -f k8s/helm/kwil/dev-values.yaml

  k8s:kwil:uninstall:
    desc: Deploy kwil services to local k8s cluster
    cmds:
      - helm uninstall kwil

  k8s:kwild:
    desc: Build and deploy kwild to local k8s cluster
    cmds:
      - docker build . -t kwild:latest -f docker/kwild.dockerfile
      - helm install kwil k8s/helm/kwil -f k8s/helm/kwil/dev-values.yaml

  k8s:kwild:install:
    desc: Deploy kwild to local k8s cluster
    cmds:
      - helm install kwild k8s/helm/kwild -f k8s/helm/kwild/dev-values.yaml

  k8s:kwild:uninstall:
    desc: Deploy kwild to local k8s cluster
    cmds:
      - helm uninstall kwild
  ############################ k8s ############################

  cli:
    desc: Runs the CLI
    cmds:
      - go run ./cmd/kwil {{.CLI_ARGS}}

  deps:
    desc: Install tools required to build this app
    cmds:
      - cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go install %

  go-install:
    cmds:
      - go install {{.REPO}}

  brew-install:
    cmds:
      - brew install {{.PACKAGE}}