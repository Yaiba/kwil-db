services:
  kwild:
    container_name: kwild
    image: kwild
    build:
      context: .
      dockerfile: docker/kwild.dockerfile
    environment:
      PG_DATABASE_URL: "postgres://$PG_USER:$PG_PASSWORD@$PG_ENDPOINT:$PG_PORT/$PG_DB?sslmode=$PG_SSL_MODE"
      WITH_GATEWAY: true
      GRPC_ENDPOINT: localhost:50051
      GRAPHQL_ENDPOINT: http://graphql-engine:8080
      ## uncomment next 2 lines if HASURA_GRAPHQL_ADMIN_SECRET is set in Hasura container
      #HASURA_GRAPHQL_ADMIN_SECRET: secretkeyhasura
      #HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
    volumes:
      - ./keys.json:/app/keys.json
    ports:
      - "50051:50051"
      - "8082:8082"
    depends_on:
      - "postgres_db"
      - "graphql-engine"
    links:
      - "postgres_db"
      - "graphql-engine"
    networks:
      - gateway
      - backend
  postgres_db:
    container_name: postgres_db
    image: postgres:15.0-alpine
    #restart: always
    environment:
      - POSTGRES_USER=$PG_USER
      - POSTGRES_PASSWORD=$PG_PASSWORD
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./scripts/pg-init-scripts/:/docker-entrypoint-initdb.d/
    networks:
      - backend
  graphql-engine:
    container_name: graphql-engine
    image: hasura/graphql-engine:v2.16.0
    ports:
      - "8080:8080"
    depends_on:
      - "postgres_db"
    links:
      - "postgres_db"
    restart: always
    environment:
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: "postgres://$PG_USER:$PG_PASSWORD@$PG_ENDPOINT:$PG_PORT/$PG_DB?sslmode=$PG_SSL_MODE"

      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: "postgres://$PG_USER:$PG_PASSWORD@$PG_ENDPOINT:$PG_PORT/postgres?sslmode=$PG_SSL_MODE"

      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: secretkeyhasura
      ## uncomment next line to set an default unauthorized role, if above line is used
      # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ## uncomment next line to set an access key for Hasura's CLI
    networks:
      - backend
networks:
  gateway:
    external: false
    name: gateway
  backend:
    external: false
    name: backend